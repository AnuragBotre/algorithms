---------------------------------------------------------------------------------
https://community.oracle.com/thread/2471899

ORA-12519, TNS:no appropriate service handler found

increase the number of process.

cmd>sqlplus / as sysdba
sqlplus>alter system set processes=300 scope=spfile;
sqlplus>shut immediate;
sqlplus>startup
_________________________________________________________________________________


https://github.com/EsotericSoftware/kryo
- Kryo is a fast and efficient object graph serialization framework for Java.
The goals of the project are speed, efficiency, and an easy to use API.
The project is useful any time objects need to be persisted, whether to a file, database, or over the network.




https://github.com/dmitry-zhuravlev/hotswap-agent-intellij-plugin
- IDEA

https://github.com/kantega


https://zeroturnaround.com/rebellabs/how-to-inspect-classes-in-your-jvm/


https://dzone.com/articles/hotswap-agent-java-runtime-class-and-resource-rede
- Hotswap Agent: Java Runtime Class and Resource Redefinition
 String pid = args[0];
            for (VirtualMachineDescriptor vmd : VirtualMachine.list()) {
                if (vmd.displayName().contains(args[1])) {
                    pid = vmd.id();
                    break;
                }
            }
            final VirtualMachine vm = VirtualMachine.attach(pid);
            vm.loadAgent(args[1], 3 > args.length || null == args[2] ? "" : args[2]);
            vm.detach();


https://github.com/kantega/sql-dsl
-


https://www.petrikainulainen.net/programming/testing/writing-clean-tests-replace-assertions-with-a-domain-specific-language/
- Writing Clean Tests – Replace Assertions with a Domain-Specific Language



https://tomassetti.me/how-to-create-an-editor-with-syntax-highlighting-dsl/?nabw=1
- How to create an editor


https://stackify.com/memory-leaks-java/



https://github.com/collections/machine-learning
-Getting started with machine learning


https://zeroturnaround.com/rebellabs/java-8-streams-cheat-sheet/
- Stream examples


https://subinsb.com/set-same-cookie-on-different-domains/
- How To Set Same Cookie On Different Domains


http://sqlite.org/
-If you're good at reading code, studying SQLite will teach you a whole boatload about database design. It's small, so it's easier to wrap your head around. But it's also professionally written.




https://icedtea.classpath.org/wiki/Thermostat
-Thermostat is an instrumentation tool for the Hotspot JVM, with support for monitoring multiple JVM instances on multiple hosts, optionally in a cloud environment.

https://stackify.com/memory-leaks-java/
-How Memory Leaks Happen in a Java Application and how to prevent it.



http://openhms.sourceforge.net/sqlbuilder/
http://www.querydsl.com/
	- Supports different types of queries like SQL , MONGO
http://www.querydsl.com/static/querydsl/latest/reference/html/ch02s07.html
	- related to SQL
http://john.krasnay.ca/2010/02/15/building-sql-in-java.html
https://github.com/alexkasko/query-string-builder
- Small library for building SQL query strings


https://stackoverflow.com/questions/30685623/how-to-implement-a-java-stream
http://www.deadcoderising.com/2017-03-07-java-8-creating-a-custom-collector-for-your-stream/
https://www.programcreek.com/2014/01/create-stream-in-java-8/
- Streams


http://www.cascading.org/
- The Cascading Ecosystem is a collection of applications, languages, and APIs for developing data-intensive applications.
- Apache Hadoop, Apache Tez, Apache Flink


http://www.baeldung.com/java-8-streams
http://java.amitph.com/2014/01/understanding-java-8-streams-api.html
http://www.oracle.com/technetwork/articles/java/ma14-java-se-8-streams-2177646.html
- Understanding Streams
		Practice examples
		Read the blog in detail.




https://en.wikipedia.org/wiki/Buddy_memory_allocation
http://www.memorymanagement.org/mmref/alloc.html
	Memory allocation algorithms
	-	Buddy memory allocation
	In comparison to other simpler techniques such as dynamic allocation, the buddy memory system has little external fragmentation, and allows for compaction of memory with little overhead.
		related terms - Internal Fragmentation , External Fragmentation.
http://www.memorymanagement.org/mmref/recycle.html
	Memory Recycling techniques



http://www.flexrule.com/rules/
	Rules Engine
		-Decision Table
		-Natural Language Rule
		-Procedural Rule
		-Validation and Decision Rule
		-Flow Orchestration: Rule, Data, Operation, Action, Task, Decision, State...
		-Workflow Orchestration
		-Decision Graph

https://dzone.com/articles/adding-java-8-lambda-goodness
- Adding Java 8 Lambda Goodness to JDBC
Must visit link


https://blogs.oracle.com/sundararajan/querying-java-heap-with-oql
- Querying Java heap with OQL

https://blog.jooq.org/tag/declarative-programming/
- Declarative programming


https://github.com/TooTallNate/Java-WebSocket
- Java WebSockets


https://softwareengineering.stackexchange.com/questions/171734/difference-between-a-socket-and-a-port
Socket Vs port

http://williamdurand.fr/2013/07/30/from-stupid-to-solid-code/
- From STUPID to SOLID Code!
- William Durand

http://www.geeksforgeeks.org/dynamic-programming-set-11-egg-dropping-puzzle/
- Dynamic Programming | Set 11 (Egg Dropping Puzzle)
- http://www.geeksforgeeks.org/category/puzzles/


https://dzone.com/articles/introduction-to-rules-engine-using-drools-expert
- Rule Base Engine

https://github.com/ftomassetti/turin-programming-language/tree/master/turin-compiler/src/test/java/me/tomassetti/turin/compiler
- Turin is a pragmatic static language for the JVM.
-

https://www.programcreek.com/2012/11/top-10-algorithms-for-coding-interview/


https://www.coursera.org/courses?languages=en&query=algorithms
-https://www.coursera.org/learn/algorithms-part1
-https://www.coursera.org/learn/algorithms-part2

http://www.geeksforgeeks.org/segregate-even-and-odd-numbers/
http://www.geeksforgeeks.org/segregate-0s-and-1s-in-an-array-by-traversing-array-once/
- Segregate Even and Odd numbers


http://www.geeksforgeeks.org/amazon-interview-experience-set-409-sde/
- Amazon interview Experience | Set 409 (For SDE-I)

http://practice.geeksforgeeks.org/problems/special-stack/1
-Special Stack (Function Problem)


http://www.geeksforgeeks.org/maximum-profit-by-buying-and-selling-a-share-at-most-k-times/
-Maximum profit by buying and selling a share at most k times

http://www.geeksforgeeks.org/find-duplicates-in-on-time-and-constant-extra-space/
- Find duplicates in O(n) time and O(1) extra space | Set 1

http://www.geeksforgeeks.org/duplicates-array-using-o1-extra-space-set-2/
- Duplicates in an array in O(n) and by using O(1) extra space | Set-2

http://www.geeksforgeeks.org/?p=7953
- Find the two repeating elements in a given array
For example, array = {4, 2, 4, 5, 2, 3, 1} and n = 5

http://www.geeksforgeeks.org/given-a-string-print-all-possible-palindromic-partition/
http://www.geeksforgeeks.org/amazon-interview-experience-set-410-campus-internship/
- Given a string, print all possible palindromic partitions

http://algorithms.tutorialhorizon.com/find-duplicates-in-an-given-array-in-on-time-and-o1-extra-space/
- Find duplicates in an given array in O(n) time and O(1) extra space.

http://algorithms.tutorialhorizon.com/check-if-array-is-consecutive-integers/#disqus_thread
- Check if Array is Consecutive Integers

http://algorithms.tutorialhorizon.com/stock-single-sell-problem-on-solution/
- Stock Single Sell Problem — O(n) Solution

http://algorithms.tutorialhorizon.com/find-duplicates-in-an-given-array-in-on-time-and-o1-extra-space/
- Algorithms


https://gist.github.com/KodeSeeker
- Studying for a Tech Interview Sucks, so Here's a Cheat Sheet to Help

This list is meant to be a both a quick guide and reference for further research into these topics. It's basically a summary of that comp sci course you never took or forgot about, so there's no way it can cover everything in depth. It also will be available as a gist on Github for everyone to edit and add to.


https://maryrosecook.com/blog/post/a-practical-introduction-to-functional-programming
https://github.com/airportyh/word-count
- Functional Programming.


https://dzone.com/articles/understanding-sunmiscunsafe
- Native Memory Allocation
- off heap memory
- Native Concurrency
			The park and unpark methods allow you to pause a thread for a certain amount of time and to resume it:

https://www.javaworld.com/article/2076971/java-concurrency/how-the-java-virtual-machine-performs-thread-synchronization.html
- Understanding threads, shared data, locks, and more in Java bytecode


http://www.artima.com/insidejvm/ed2/threadsynch.html -  Inside the Java Virtual Machine Thread Synchronization

https://www.javaworld.com/article/2077769/core-java/better-monitors-for-java.html - Better monitors for Java

https://dzone.com/articles/how-create-your-own-dynamic

https://stackoverflow.com/questions/32796868/locking-in-java-optimistic-vs-pessimistic


http://blog.stevensanderson.com/2009/11/04/selective-unit-testing-costs-and-benefits/
